 BIẾN ĐỔI NHỊ PHÂN

Bài làm tốt nhất
Cho ma trận A[N][M] chỉ bao gồm các số 0 và 1. Hãy sửa đổi các phần tử của ma trận A[][] theo nguyên tắc: nếu phần tử A[i][j] = 1 ta thay tất cả các phần tử của hàng i, cột j bởi 1. Ví dụ với ma trận dưới đây sẽ minh họa cho phép biến đổi:

1          0          0          1                      1          1          1          1

0          0          1          0                      1          1          1          1

0          0          0          0                      1          0          1          1

Input:

Dòng đầu tiên đưa vào số lượng bộ test T.
Những dòng kế tiếp đưa vào T bộ test. Mỗi bộ test gồm hai dòng: Dòng đầu tiên đưa vào hai số N, M ; dòng tiếp là N×M các phần tử của ma trận A[][]; các phần tử được viết cách nhau một vài khoảng trống.
T, N, M thỏa mãn ràng buộc: 1≤T≤100; 1≤ N, M ≤100.
Output:

Đưa ra kết quả mỗi test theo từng dòng.
Input:

Output:

2
2 3
0 0 0 

0 0 1

3 4
1 0 0 1 

0 0 1 0 

0 0 0 0

0 0 1

1 1 1

1 1 1 1

1 1 1 1

1 0 1 1


bai lam:
#include<bits/stdc++.h>
using namespace std;
int main(){
	int t;
	cin>>t;
	while(t--){
		int n,m;
		cin>>n>>m;
		int a[n][m],b[n][m];
		for(int i=0;i<n;i++){
			for(int j=0;j<m;j++){
			cin>>a[i][j];
			b[i][j]=a[i][j];
		}
	}
		for(int i=0;i<n;i++){
			for(int j=0;j<m;j++){
			if(a[i][j]==1){
				for(int k=0;k<m;k++){
					b[i][k]=1;
				}
			    for(int k=0;k<n;k++){
			 	    b[k][j]=1;
			 }
		}
	}
}
	for(int i=0;i<n;i++){
		for(int j=0;j<m;j++){
			cout<<b[i][j]<<" ";
		}
		cout<<endl;
	}
		cout<<endl;
	}
}
